name: Docker CI
on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
env:
    IMAGE_NAME: frontend
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [10.x, 12.x, 14.x]
        steps:
            - uses: actions/checkout@v2
            # NodeJS
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm i
            - run: npm i -g @angular/cli
            - run: ng build --prod
            # Upload
            - name: Save Artifacts
              uses: actions/upload-artifact@v2
              if: github.event_name == 'push'
              with:
                  name: assets
                  path: dist/mini-amazon-go-front-end/*
    docker:
        runs-on: ubuntu-latest
        needs: build
        if: github.event_name == 'push'
        steps:
            - uses: actions/checkout@v2
            # Download
            - name: Download Artifacts
              uses: actions/download-artifact@v2
              with:
                  name: assets
                  path: dist/mini-amazon-go-front-end/*
            # Build
            - name: Docker Build
              run: docker build . --file Dockerfile --tag $IMAGE_NAME
            # Auth
            - name: Log into registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
            # Push
            - name: Push image
              run: |
                  IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

                  # Change all uppercase to lowercase
                  IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

                  # Strip git ref prefix from version
                  VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

                  # Strip "v" prefix from tag name
                  [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                  # Use Docker `latest` tag convention
                  [ "$VERSION" == "master" ] && VERSION=latest

                  echo IMAGE_ID=$IMAGE_ID
                  echo VERSION=$VERSION

                  docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                  docker push $IMAGE_ID:$VERSION
    #deploy:
    #  name: deploy
    #  runs-on: ubuntu-latest
    #    needs: docker
    #    if: github.event_name == 'push'
    #    steps:
    #    - name: Restart Stack
    #      uses: appleboy/ssh-action@master
    #      with:
    #        host: ${{ secrets.SSH_HOST }}
    #        username: ${{ secrets.SSH_USER }}
    #        key: ${{ secrets.SSH_KEY }}
    #        script: |
    #          ls
